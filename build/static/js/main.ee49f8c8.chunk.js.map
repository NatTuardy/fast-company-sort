{"version":3,"sources":["reportWebVitals.js","components/qualitie.jsx","components/bookmark.jsx","components/user.jsx","components/users.jsx","components/searchStatus.jsx","api/fake.api/professions.api.js","api/fake.api/user.api.js","api/index.js","components/pagination.jsx","components/groupList.jsx","App.js","utils/paginate.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Qualitie","color","name","className","classes","getBadgeclasses","BookMark","status","onToggle","id","type","onClick","User","_id","qualities","profession","completedMeetings","rate","onDelete","map","qua","key","Users","users","rest","user","SearchStatus","number","professionsObject","doctor","waiter","physics","engineer","actor","cook","professions","tedious","strange","buller","alcoholic","handsome","uncertain","API","fetchAll","Promise","resolve","window","setTimeout","Pagination","length","pageSize","onPage","currentPage","listPageSize","Math","round","listPage","Array","fill","e","i","item","GroupList","items","valueProperty","contentProperty","onItemSelect","selectedItem","isArray","role","Object","keys","defaultProps","App","useState","setUsers","setProfessions","setCurrentPage","selectedProf","setSelectedProf","useEffect","api","date","filterUsers","lengthUser","userCrop","handleDelete","userId","filter","handleToggleBookmark","newArr","handleProfessionsSelect","handleChangePage","page","console","log","JSON","stringify","array","startCut","finishCut","slice","paginate","clearFilter","scope","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee49f8c8.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Qualitie = ({ color, name }) => {\n  const getBadgeclasses = (color) => {\n    let classes = \"badge bg-\";\n    classes += color;\n    return classes;\n  };\n\n  return (\n    <>\n      <span className={getBadgeclasses(color)}>{name}</span>\n    </>\n  );\n};\n\nQualitie.propTypes = {\n  color: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default Qualitie;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst BookMark = ({ status, onToggle, id }) => {\n  return (\n    <>\n      <button\n        type=\"button\"\n        className=\"btn btn-outline-info btn-sm\"\n        onClick={() => onToggle(id)}\n      >\n        <i className={status ? \"bi bi-trophy-fill\" : \"bi bi-trophy\"}></i>\n      </button>\n    </>\n  );\n};\n\nBookMark.propTypes = {\n  status: PropTypes.bool.isRequired,\n  onToggle: PropTypes.func.isRequired,\n  id: PropTypes.number.isRequired,\n};\n\nexport default BookMark;\n","import React from \"react\";\nimport Qualities from \"./qualitie\";\nimport BookMark from \"./bookmark\";\nimport PropTypes from \"prop-types\";\n\nconst User = ({\n  _id,\n  name,\n  qualities,\n  profession,\n  completedMeetings,\n  rate,\n  onDelete,\n  onToggle,\n  status,\n}) => {\n  return (\n    <>\n      <tr>\n        <td>{name}</td>\n        <td>\n          {qualities.map((qua) => (\n            <Qualities {...qua} key={qua._id} />\n          ))}\n        </td>\n        <td>{profession.name}</td>\n        <td>{completedMeetings}</td>\n        <td>{rate}</td>\n        <td>\n          <BookMark id={_id} status={status} onToggle={onToggle} />\n        </td>\n        <td>\n          <button\n            type=\"button\"\n            className=\"btn btn-danger\"\n            onClick={() => onDelete(_id)}\n          >\n            delete\n          </button>\n        </td>\n      </tr>\n    </>\n  );\n};\n\nUser.propTypes = {\n  _id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  qualities: PropTypes.array.isRequired,\n  profession: PropTypes.string.isRequired,\n  completedMeetings: PropTypes.number.isRequired,\n  rate: PropTypes.number.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onToggle: PropTypes.func.isRequired,\n  status: PropTypes.bool.isRequired,\n};\n\nexport default User;\n","import React from \"react\";\nimport User from \"./user\";\nimport PropTypes from \"prop-types\";\n\nconst Users = ({ users, ...rest }) => {\n  return (\n    <>\n      {users.map((user) => (\n        <User key={user._id} {...user} {...rest} />\n      ))}\n    </>\n  );\n};\n\nUsers.propTypes = {\n  users: PropTypes.array.isRequired,\n};\n\nexport default Users;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SearchStatus = ({ number }) => {\n  const people = () => {\n    return (number === 2 || number === 3 || number === 4) ? \"человека\" : \"человек\";\n  };\n\n  return (\n    <h4>\n      <span className=\"badge m-2 h-12 bg-primary\">{`${number} ${people()} тусанет с тобой сегодня`}</span>\n    </h4>\n  );\n};\n\nSearchStatus.propTypes = {\n  number: PropTypes.number.isRequired,\n};\n\nexport default SearchStatus;\n","export const professionsObject = {\r\n  doctor: { _id: \"67rdca3eeb7f6fgeed471818\", name: \"Доктор\" },\r\n  waiter: { _id: \"67rdca3eeb7f6fgeed471820\", name: \"Официант\" },\r\n  physics: { _id: \"67rdca3eeb7f6fgeed471814\", name: \"Физик\" },\r\n  engineer: { _id: \"67rdca3eeb7f6fgeed471822\", name: \"Инженер\" },\r\n  actor: { _id: \"67rdca3eeb7f6fgeed471824\", name: \"Актер\" },\r\n  cook: { _id: \"67rdca3eeb7f6fgeed471829\", name: \"Повар\" },\r\n};\r\nexport const professions = [\r\n  { _id: \"67rdca3eeb7f6fgeed471818\", name: \"Доктор\" },\r\n  { _id: \"67rdca3eeb7f6fgeed471820\", name: \"Официант\" },\r\n  { _id: \"67rdca3eeb7f6fgeed471814\", name: \"Физик\" },\r\n  { _id: \"67rdca3eeb7f6fgeed471822\", name: \"Инженер\" },\r\n  { _id: \"67rdca3eeb7f6fgeed471824\", name: \"Актер\" },\r\n  { _id: \"67rdca3eeb7f6fgeed471829\", name: \"Повар\" },\r\n];\r\nconst fetchAll = () =>\r\n  new Promise((resolve) => {\r\n    window.setTimeout(function () {\r\n      resolve(professions);\r\n    }, 2000);\r\n  });\r\n\r\nexport default {\r\n  fetchAll,\r\n};\r\n","import { professionsObject as professions } from \"./professions.api\";\nconst qualities = {\n  tedious: {\n    _id: \"67rdca3eeb7f6fgeed471198\",\n    name: \"Нудила\",\n    color: \"primary\",\n  },\n  strange: {\n    _id: \"67rdca3eeb7f6fgeed471100\",\n    name: \"Странный\",\n    color: \"secondary\",\n  },\n  buller: {\n    _id: \"67rdca3eeb7f6fgeed4711012\",\n    name: \"Троль\",\n    color: \"success\",\n  },\n  alcoholic: {\n    _id: \"67rdca3eeb7f6fgeed471101\",\n    name: \"Алкоголик\",\n    color: \"danger\",\n  },\n  handsome: {\n    _id: \"67rdca3eeb7f6fgeed471102\",\n    name: \"Красавчик\",\n    color: \"info\",\n  },\n  uncertain: {\n    _id: \"67rdca3eeb7f6fgeed471102\",\n    name: \"Неуверенный\",\n    color: \"dark\",\n  },\n};\n\nconst users = [\n  {\n    _id: \"67rdca3eeb7f6fgeed471815\",\n    name: \"Джон Дориан\",\n    profession: professions.doctor,\n    qualities: [qualities.tedious, qualities.uncertain, qualities.strange],\n    completedMeetings: 36,\n    rate: 2.5,\n  },\n  {\n    _id: \"67rdca3eeb7f6fgeed471816\",\n    name: \"Кокс\",\n    profession: professions.doctor,\n    qualities: [qualities.buller, qualities.handsome, qualities.alcoholic],\n    completedMeetings: 15,\n    rate: 2.5,\n  },\n  {\n    _id: \"67rdca3eeb7f6fgeed471817\",\n    name: \"Боб Келсо\",\n    profession: professions.doctor,\n    qualities: [qualities.buller],\n    completedMeetings: 247,\n    rate: 3.5,\n  },\n  {\n    _id: \"67rdca3eeb7f6fgeed471818\",\n    name: \"Рэйчел Грин\",\n    profession: professions.waiter,\n    qualities: [qualities.uncertain],\n    completedMeetings: 148,\n    rate: 3.5,\n  },\n  {\n    _id: \"67rdca3eeb7f6fgeed471819\",\n    name: \"Шелдон Купер\",\n    profession: professions.physics,\n    qualities: [qualities.strange, qualities.tedious],\n    completedMeetings: 37,\n    rate: 4.6,\n  },\n  {\n    _id: \"67rdca3eeb7f6fgeed471820\",\n    name: \"Леонард Хофстедтер\",\n    profession: professions.physics,\n    qualities: [qualities.strange, qualities.uncertain],\n    completedMeetings: 147,\n    rate: 3.5,\n  },\n  {\n    _id: \"67rdca3eeb7f6fgeed471821\",\n    name: \"Говард Воловиц\",\n    profession: professions.engineer,\n    qualities: [qualities.strange, qualities.tedious],\n    completedMeetings: 72,\n    rate: 3.5,\n  },\n  {\n    _id: \"67rdca3eeb7f6fgeed471822\",\n    name: \"Никола Тесла\",\n    profession: professions.engineer,\n    qualities: [qualities.handsome],\n    completedMeetings: 72,\n    rate: 5,\n  },\n  {\n    _id: \"67rdca3eeb7f6fgeed471823\",\n    name: \"Моника Геллер\",\n    profession: professions.cook,\n    qualities: [qualities.strange, qualities.uncertain],\n    completedMeetings: 17,\n    rate: 4.5,\n  },\n  {\n    _id: \"67rdca3eeb7f6fgeed471824\",\n    name: \"Рататуй\",\n    profession: professions.cook,\n    qualities: [qualities.handsome, qualities.buller],\n    completedMeetings: 17,\n    rate: 4.5,\n  },\n  {\n    _id: \"67rdca3eeb7f6fgeed47181f\",\n    name: \"Джоуи Триббиани\",\n    profession: professions.actor,\n    qualities: [qualities.uncertain, qualities.strange],\n    completedMeetings: 434,\n    rate: 3.5,\n  },\n  {\n    _id: \"67rdca3eeb7f6fgeed47181r\",\n    name: \"Брэд Питт\",\n    profession: professions.actor,\n    qualities: [qualities.handsome],\n    completedMeetings: 434,\n    rate: 5,\n  },\n];\n\nconst fetchAll = () =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      resolve(users);\n    }, 2000);\n  });\n\nexport default {\n  fetchAll,\n};\n","import users from \"./fake.api/user.api\";\nimport professions from \"./fake.api/professions.api\";\nconst API = {\n  users,\n  professions,\n};\nexport default API;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Pagination = ({ length, pageSize, onPage, currentPage = 1 }) => {\n  const listPageSize = Math.round(length / pageSize);\n  if (listPageSize === 1) return null;\n  const listPage = new Array(listPageSize).fill(0).map((e, i) => i + 1);\n\n  return (\n    <nav>\n      <ul className=\"pagination\">\n        {listPage.map((item) => (\n          <li\n            className={currentPage === item ? \"page-item active\" : \"page-item\"}\n            key={item}\n            onClick={() => onPage(item)}\n          >\n            <a className=\"page-link\">{item}</a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  length: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  onPage: PropTypes.func.isRequired,\n  currentPage: PropTypes.number.isRequired,\n};\n\nexport default Pagination;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst GroupList = ({\r\n  items,\r\n  valueProperty,\r\n  contentProperty,\r\n  onItemSelect,\r\n  selectedItem,\r\n}) => {\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {Array.isArray(items) ? items.map((item) => (\r\n        <li\r\n          className={\"list-group-item\" + (item === selectedItem ? \" active\" : \"\")}\r\n          role=\"button\"\r\n          key={item._id}\r\n          onClick={() => onItemSelect(item)}\r\n        >\r\n          {item.name}\r\n        </li>\r\n      )\r\n      ) : Object.keys(items).map((item) => (\r\n        <li\r\n          key={items[item][valueProperty]}\r\n          role=\"button\"\r\n          onClick={() => onItemSelect(items[item])}\r\n          className={\"list-group-item\" + (items[item] === selectedItem ? \" active\" : \"\")\r\n          }\r\n        >\r\n          {items[item][contentProperty]}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nGroupList.defaultProps = {\r\n  valueProperty: \"_id\",\r\n  contentProperty: \"name\",\r\n};\r\nGroupList.propTypes = {\r\n  items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  valueProperty: PropTypes.string.isRequired,\r\n  contentProperty: PropTypes.string.isRequired,\r\n  onItemSelect: PropTypes.func,\r\n  selectedItem: PropTypes.object.isRequired,\r\n};\r\nexport default GroupList;\r\n","import React, { useState, useEffect } from \"react\";\nimport Users from \"./components/users.jsx\";\nimport SearchStatus from \"./components/searchStatus\";\nimport api from \"./api\";\nimport Pagination from \"./components/pagination.jsx\";\nimport { paginate } from \"./utils/paginate\";\nimport GroupList from \"./components/groupList.jsx\";\n\nconst App = () => {\n  const [users, setUsers] = useState();\n  const [professions, setProfessions] = useState();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selectedProf, setSelectedProf] = useState();\n  useEffect(() => {\n    api.users.fetchAll().then((date) => setUsers(date));\n    api.professions.fetchAll().then((date) => setProfessions(date));\n  }, []);\n\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [selectedProf]);\n  const handleDelete = (userId) => {\n    setUsers(users.filter((user) => user._id !== userId));\n  };\n\n  const handleToggleBookmark = (id) => {\n    const newArr = users.map((user) =>\n      user._id === id ? { ...user, status: !user.status } : user\n    );\n    setUsers(newArr);\n  };\n\n  const handleProfessionsSelect = (item) => {\n    setSelectedProf(item);\n  };\n\n  // pagination\n  const pageSize = 2;\n  const handleChangePage = (page) => {\n    setCurrentPage(page);\n  };\n  let filterUsers;\n  let lengthUser;\n  let userCrop;\n  if (users) {\n    if (Array.isArray(professions)) {\n      filterUsers = selectedProf ? users.filter((user) => {\n        return user.profession.name === selectedProf.name;\n      }) : users;\n    } else {\n      filterUsers = selectedProf ? users.filter((user) => {\n        console.log(\"user:\", user.profession, \"select:\", selectedProf, JSON.stringify(user.profession) === JSON.stringify(selectedProf));\n        return JSON.stringify(user.profession) === JSON.stringify(selectedProf);\n      }) : users;\n    }\n    lengthUser = filterUsers.length;\n    userCrop = paginate(filterUsers, currentPage, pageSize);\n  }\n  const clearFilter = () => {\n    setSelectedProf();\n  };\n\n  const renderTable = () => {\n    return (\n      <>\n        <div className=\"d-flex\">\n          {professions && (\n            <div className=\"d-flex flex-column flex-shrink-0 p-3\">\n              <GroupList\n                selectedItem={selectedProf}\n                items={professions}\n                onItemSelect={handleProfessionsSelect}\n              />\n              <button onClick={clearFilter} className=\"btn btn-secondary mt-2\">\n                Очистить\n              </button>\n            </div>\n          )}\n          <div className=\"d-flex flex-column\">\n            <SearchStatus number={lengthUser} />\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Имя</th>\n                  <th scope=\"col\">Качества</th>\n                  <th scope=\"col\">Профессия</th>\n                  <th scope=\"col\">Встретился, раз</th>\n                  <th scope=\"col\">Оценка</th>\n                  <th scope=\"col\">Избранное</th>\n                  <th scope=\"col\"></th>\n                </tr>\n              </thead>\n              <tbody>\n                <Users\n                  users={userCrop}\n                  onDelete={handleDelete}\n                  onToggle={handleToggleBookmark}\n                />\n              </tbody>\n            </table>\n            <div className=\"d-flex justify-content-center\">\n              <Pagination\n                length={lengthUser}\n                pageSize={pageSize}\n                onPage={handleChangePage}\n                currentPage={currentPage}\n              />\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  };\n\n  return (\n    <div>\n      {!users ? (\n        <h4>\n          <span className=\"badge m-2 h-12 bg-danger\">\n            Никто не тусанет с тобой сегодня\n          </span>\n        </h4>\n      ) : (\n        renderTable()\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","export function paginate(array, currentPage, pageSize) {\n  const startCut = (currentPage - 1) * pageSize;\n  const finishCut = currentPage * pageSize;\n  const newArr = array.slice(startCut, finishCut);\n  return newArr;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}